<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ChenXiaoqiong</title>
  <subtitle>爱编程，爱学习，爱挑战！程序媛就是我，我就是陈小琼 ^_^</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://chenxiaoqiong.me/"/>
  <updated>2016-12-29T12:39:32.468Z</updated>
  <id>http://chenxiaoqiong.me/</id>
  
  <author>
    <name>ChenXiaoqiong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>logback配置详解</title>
    <link href="http://chenxiaoqiong.me/2016-12-29/logback/"/>
    <id>http://chenxiaoqiong.me/2016-12-29/logback/</id>
    <published>2016-12-29T09:47:05.000Z</published>
    <updated>2016-12-29T12:39:32.468Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>最近公司项目进行了重构，日志管理从Log4j迁移到了LogBack。 Logback是由log4j创始人Ceki Gülcü为取代log4j而设计的又一个开源日志组件。无论从设计上还是实现上，Logback相对log4j而言有了相对多的改进：<a href="http://www.oschina.net/translate/reasons-to-prefer-logbak-over-log4j。" target="_blank" rel="external">http://www.oschina.net/translate/reasons-to-prefer-logbak-over-log4j。</a></p>
</blockquote>
<h2 id="logback配置详解"><a href="#logback配置详解" class="headerlink" title="logback配置详解"></a>logback配置详解</h2><h3 id="日志级别"><a href="#日志级别" class="headerlink" title="日志级别"></a>日志级别</h3><ol>
<li>DEBUG：指出细粒度信息事件对调试应用程序是非常有帮助的；</li>
<li>INFO：消息在粗粒度级别上突出强调应用程序的运行过程；</li>
<li>WARN：会出现潜在错误的情形；</li>
<li>ERROR：指出虽然发生错误事件，但仍然不影响系统的继续运行；</li>
<li>FATAL：指出每个严重的错误事件将会导致应用程序的退出；</li>
<li>另外，还有两个可用的特别的日志记录级别:<br>ALL:用于打开所有日志记录；<br>OFF:用于关闭所有日志记录。<br><strong><em>优先级从高到低分别是 ERROR、WARN、INFO、DEBUG。通过定义的级别，您可以控制到应用程序中相应级别的日志信息的开关。程序会打印高于或等于所设置级别的日志，设置的日志等级越高，打印出来的日志就越少。如果设置级别为INFO，则优先级高于等于INFO级别（如：INFO、 WARN、ERROR）的日志信息将可以被输出,小于该级别的如DEBUG将不会被输出。</em></strong></li>
</ol>
<h3 id="基本配置及解释"><a href="#基本配置及解释" class="headerlink" title="基本配置及解释"></a>基本配置及解释</h3><h4 id="基本配置文件"><a href="#基本配置文件" class="headerlink" title="基本配置文件"></a>基本配置文件</h4><pre><code>    &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;configuration&gt;
    &lt;property name=&quot;log.charset.encoding&quot; value=&quot;UTF-8&quot;/&gt;
    &lt;property name=&quot;LOG_HOME&quot; value=&quot;log&quot; /&gt;
    &lt;!-- 控制台输出 --&gt;
    &lt;appender name=&quot;STDOUT&quot; class=&quot;ch.qos.logback.core.ConsoleAppender&quot;&gt;
        &lt;Encoding&gt;UTF-8&lt;/Encoding&gt;
        &lt;layout class=&quot;ch.qos.logback.classic.PatternLayout&quot;&gt;
            &lt;pattern&gt;%d{HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n
            &lt;/pattern&gt;
        &lt;/layout&gt;
    &lt;/appender&gt;

    &lt;!-- 按照每天生成日志文件 --&gt;
    &lt;appender name=&quot;FILE&quot;
              class=&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt;
        &lt;Encoding&gt;UTF-8&lt;/Encoding&gt;
        &lt;rollingPolicy class=&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;&gt;
            &lt;FileNamePattern&gt;${LOG_HOME}/myApp.log.%d{yyyy-MM-dd}.log&lt;/FileNamePattern&gt;
            &lt;MaxHistory&gt;30&lt;/MaxHistory&gt;
        &lt;/rollingPolicy&gt;
        &lt;layout class=&quot;ch.qos.logback.classic.PatternLayout&quot;&gt;
            &lt;pattern&gt;%d{HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n
            &lt;/pattern&gt;
        &lt;/layout&gt;
    &lt;/appender&gt;

    &lt;!-- 按照每天生成错误日志文件 --&gt;
    &lt;appender name=&quot;FILE-ERROR&quot;
              class=&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt;
        &lt;Encoding&gt;UTF-8&lt;/Encoding&gt;
        &lt;rollingPolicy class=&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;&gt;
            &lt;FileNamePattern&gt;${LOG_HOME}/myApp.log_error.%d{yyyy-MM-dd}.log&lt;/FileNamePattern&gt;
            &lt;MaxHistory&gt;30&lt;/MaxHistory&gt;
        &lt;/rollingPolicy&gt;
        &lt;layout class=&quot;ch.qos.logback.classic.PatternLayout&quot;&gt;
            &lt;pattern&gt;%d{HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n
            &lt;/pattern&gt;
        &lt;/layout&gt;
        &lt;!-- 下面为配置只输出error级别的日志 --&gt;
        &lt;filter class=&quot;ch.qos.logback.classic.filter.LevelFilter&quot;&gt;
            &lt;level&gt;ERROR&lt;/level&gt;
            &lt;onMatch&gt;ACCEPT&lt;/onMatch&gt;
            &lt;onMismatch&gt;DENY&lt;/onMismatch&gt;
        &lt;/filter&gt;
    &lt;/appender&gt;

    &lt;!-- 设置具体一个类日志的日志打印 --&gt;
    &lt;loger name=&quot;com.candy.controller.TestController&quot; level=&quot;INFO&quot; activity=&quot;false&quot;&gt;
        &lt;appender-ref ref=&quot;STDOUT&quot;/&gt;
        &lt;appender-ref ref=&quot;FILE&quot;/&gt;
    &lt;/loger&gt;

    &lt;root level=&quot;DEBUG&quot;&gt;
        &lt;appender-ref ref=&quot;STDOUT&quot; /&gt;
        &lt;appender-ref ref=&quot;FILE&quot; /&gt;
    &lt;/root&gt;
&lt;/configuration&gt;
</code></pre><h4 id="配置文件节点详解"><a href="#配置文件节点详解" class="headerlink" title="配置文件节点详解"></a>配置文件节点详解</h4><ul>
<li><p>设置变量： &lt; property &gt;<br>用来定义变量值的标签，<property> 有两个属性，name和value；其中name的值是变量的名称，value的值时变量定义的值。通过<property>定义的值会被插入到logger上下文中。定义变量后，可以使“${}”来使用变量。</property></property></p>
</li>
<li><p>设置loger：&lt; loger &gt;<br>用来设置某一个包或者具体的某一个类的日志打印级别、以及指定<appender>。<loger>仅有一个name属性，一个可选的level和一个可选的addtivity属性。<br>name:<br>用来指定受此loger约束的某一个包或者具体的某一个类。<br>level:<br>用来设置打印级别，大小写无关：TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF，还有一个特殊值INHERITED或者同义词NULL，代表强制执行上级的级别。<br>如果未设置此属性，那么当前loger将会继承上级的级别。<br>addtivity:<br>是否向上级loger传递打印信息。默认是true。<br>&lt; loger &gt;可以包含零个或多个&lt; appender-ref &gt;元素，标识这个appender将会添加到这个loger。</loger></appender></p>
</li>
<li><p>设置root:&lt; root &gt;<br>也是<loger>元素，但是它是根loger。只有一个level属性，应为已经被命名为”root”.<br>level:<br>用来设置打印级别，大小写无关：TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF，不能设置为INHERITED或者同义词NULL。<br>默认是DEBUG。<br><root>可以包含零个或多个<appender-ref>元素，标识这个appender将会添加到这个loger。</appender-ref></root></loger></p>
<h3 id="过滤器filter"><a href="#过滤器filter" class="headerlink" title="过滤器filter"></a>过滤器filter</h3></li>
<li><p>过滤器的返回值只能是ACCEPT、DENY和NEUTRAL的其中一个<br>DENY：记录事件立即被抛弃，不再经过剩余过滤器；<br>NEUTRAL：有序列表里的下一个过滤器会接着处理记录事件；<br>ACCEPT：那么记录事件被立即处理，不再经过剩余过滤器。<br>过滤器被添加到<appender>中，为<appender>添加一个或多个过滤器后，可以用任意条件对日志进行过滤。<appender> 有多个过滤器时，按照配置顺序执行。</appender></appender></appender></p>
</li>
</ul>
<ul>
<li>常用的过滤器：</li>
</ul>
<ol>
<li>LevelFilter： 级别过滤器，根据日志级别进行过滤。如果日志级别等于配置级别，过滤器会根据onMath 和 onMismatch接收或拒绝日志。有以下子节点：<br>&lt; level &gt;:设置过滤级别<br>&lt; onMatch &gt;:用于配置符合过滤条件的操作<br>&lt; onMismatch &gt;:用于配置不符合过滤条件的操作</li>
<li>ThresholdFilter： 临界值过滤器，过滤掉低于指定临界值的日志。当日志级别等于或高于临界值时，过滤器返回NEUTRAL；当日志级别低于临界值时，日志会被拒绝。</li>
<li>EvaluatorFilter： 求值过滤器，评估、鉴别日志是否符合指定条件。</li>
</ol>
<p>此篇文章只是自己做了一下总结，还有诸多不足，还请大家指正！</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;最近公司项目进行了重构，日志管理从Log4j迁移到了LogBack。 Logback是由log4j创始人Ceki Gülcü为取代log4j而设计的又一个开源日志组件。无论从设计上还是实现上，Logback相对log4j而言有了相对多的改进：&lt;a 
    
    </summary>
    
      <category term="技术" scheme="http://chenxiaoqiong.me/categories/develop/"/>
    
      <category term="logback" scheme="http://chenxiaoqiong.me/categories/develop/logback/"/>
    
    
      <category term="日志配置" scheme="http://chenxiaoqiong.me/tags/%E6%97%A5%E5%BF%97%E9%85%8D%E7%BD%AE/"/>
    
      <category term="logback" scheme="http://chenxiaoqiong.me/tags/logback/"/>
    
  </entry>
  
  <entry>
    <title>tomcat配置https协议</title>
    <link href="http://chenxiaoqiong.me/2016-11-25/https/"/>
    <id>http://chenxiaoqiong.me/2016-11-25/https/</id>
    <published>2016-11-25T08:34:53.000Z</published>
    <updated>2016-11-28T03:35:44.523Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>当遇到支付等安全性要求较高的情况时需要使用https协议，在此记录一下配置方式，方便以后查看，也希望能帮到其他朋友。</p>
</blockquote>
<h2 id="HTTPS协议详解"><a href="#HTTPS协议详解" class="headerlink" title="HTTPS协议详解"></a>HTTPS协议详解</h2><p>  <strong>HTTPS是HTTP的安全版，其与http的主要区别如下：</strong>
　　</p>
<ol>
<li><p>https协议需要到ca申请证书，一般免费证书很少，需要交费。</p>
</li>
<li><p>http是超文本传输协议，信息是明文传输，https 则是具有安全性的ssl加密传输协议。</p>
</li>
<li><p>http和https使用的是完全不同的连接方式，用的端口也不一样，前者是80，后者是443。</p>
</li>
<li><p>http的连接很简单，是无状态的；HTTPS协议是由SSL+HTTP协议构建的可进行加密传输、身份认证的网络协议，比http协议安全。</p>
</li>
</ol>
<h2 id="tomcat配置"><a href="#tomcat配置" class="headerlink" title="tomcat配置"></a>tomcat配置</h2><h3 id="windows环境"><a href="#windows环境" class="headerlink" title="windows环境"></a>windows环境</h3><p><strong>注：下文中“d:\tbb.keystore，d:\tbb.cer”为证书文件路径，没有会自动创建，路径可自行更改；“yourPassword”为密码</strong></p>
<ol>
<li><p>创建证书keystore<br>在命令行窗口中输入以下命令： <code>keytool -genkey -alias tbb -keyalg RSA -keystore d:\tbb.keystore</code><br>根据提示输入信息：<br><img src="/img/imgs/https1.jpg" alt=""><br>注：名字和姓氏要输入本机ip，国家、地区代码：cn</p>
</li>
<li><p>创建自签名的证书<br>在命令行窗口中输入以下命令：<code>keytool -selfcert -alias tbb -keystore d:\tbb.keystore</code></p>
</li>
<li><p>导出证书：<br><code>keytool -export -alias tbb -keystore d:\tbb.keystore -storepass yourPassword</code><br><code>-rfc -file d:\tbb.cer</code></p>
</li>
<li><p>双击打开d:\tbb.cer，将证书安装在“受信任的根证书颁发机构”区域中（也可以配置好之后从浏览器导入）<br><img src="/img/imgs/https2.jpg" alt=""><br><img src="/img/imgs/https3.jpg" alt=""><br><img src="/img/imgs/https4.jpg" alt=""></p>
</li>
<li><p>tomcat配置，打开conf/server.xml,加入如下配置：<br>tomcat6：<br><code>&lt; Connector port=&quot;443&quot; protocol=&quot;HTTP/1.1&quot; SSLEnabled=&quot;true&quot; maxThreads=&quot;150&quot;</code> <code>scheme=&quot;https&quot; secure=&quot;true&quot; keystoreFile=&quot;d:\tbb.keystore&quot;</code>  <code>keystorePass=&quot;yourPassword&quot; clientAuth=&quot;false&quot; sslProtocol=&quot;TLS&quot; /&gt;</code><br>Tomcat7：<br><code>&lt; Connector port=&quot;8443&quot; protocol=&quot;org.apache.coyote.http11.Http11Protocol&quot;</code> <code>SSLEnabled=&quot;true&quot; maxThreads=&quot;150&quot; scheme=&quot;https&quot; secure=&quot;true&quot; keystoreFile=&quot;d:</code><br><code>\tbb.keystore&quot; keystorePass=&quot;yourPassword&quot; clientAuth=&quot;false&quot; sslProtocol=&quot;TLS&quot; /&gt;</code></p>
</li>
</ol>
<h3 id="linux环境"><a href="#linux环境" class="headerlink" title="linux环境"></a>linux环境</h3><ol>
<li>创建证书keystore，执行下面的命令，按提示输入信息<br><code>keytool -genkey -alias tomcat -keyalg RSA -keystore /root/tomcat/apache-tomcat-8.0.35/conf/.keystore</code></li>
<li>修改tomcat的conf/server.xml文件<br><code>&lt;Connector port=&quot;8443&quot; protocol=&quot;HTTP/1.1&quot; SSLEnabled=&quot;true&quot; maxThreads=&quot;150&quot; scheme=&quot;https&quot;</code><br><code>secure=&quot;true&quot; clientAuth=&quot;false&quot; keystoreFile=&quot;/root/tomcat/apache-tomcat-8.0.35/</code><br><code>conf/.keystore&quot; keystorePass=&quot;yourpassword&quot;  sslProtocol=&quot;TLS&quot; /&gt;</code></li>
</ol>
<h3 id="测试效果"><a href="#测试效果" class="headerlink" title="测试效果"></a>测试效果</h3><p>此配置是自己生成ssl证书，不被浏览器信任（具体表现https前面有个X）：<br><img src="/img/imgs/https5.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;当遇到支付等安全性要求较高的情况时需要使用https协议，在此记录一下配置方式，方便以后查看，也希望能帮到其他朋友。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;HTTPS协议详解&quot;&gt;&lt;a href=&quot;#HTTPS协议详解&quot; class=&quot;
    
    </summary>
    
      <category term="技术" scheme="http://chenxiaoqiong.me/categories/develop/"/>
    
      <category term="https" scheme="http://chenxiaoqiong.me/categories/develop/https/"/>
    
    
      <category term="https" scheme="http://chenxiaoqiong.me/tags/https/"/>
    
      <category term="tomcat" scheme="http://chenxiaoqiong.me/tags/tomcat/"/>
    
  </entry>
  
  <entry>
    <title>生活如雨，有伞就好！</title>
    <link href="http://chenxiaoqiong.me/2016-11-04/life/"/>
    <id>http://chenxiaoqiong.me/2016-11-04/life/</id>
    <published>2016-11-04T07:02:03.000Z</published>
    <updated>2016-11-04T08:26:34.547Z</updated>
    
    <content type="html"><![CDATA[<p>其实生活就是一场雨，<br>有伞就能平安度过，<br>没有伞，就会被雨淋成落汤鸡。<br>朋友，你有伞吗？</p>
<p><img src="/img/life/life1.png" alt=""><br>或许没有伞的人居多，<br>因为没伞，被雨淋得稀里哗啦。<br>每个人都想有一把伞，<br>在生活中遮风避雨。<br>可伞在哪里？</p>
<p><img src="/img/life/life2.png" alt=""><br>若别人能够给予，<br>当然心怀感恩、一路同行。<br>若无人给予，<br>不妨自己造一把伞，<br>撑自己的伞，风雨无阻。</p>
<p><img src="/img/life/life4.png" alt=""><br>生活如雨，有伞就好！<br>不管是自己撑起的，还是别人给的。</p>
<p><img src="/img/life/life5.png" alt=""><br>生活如雨，有伞就好！<br>要学会自己制造伞，<br>让自己在风雨中行走，在大浪中激闯！</p>
<p><img src="/img/life/life6.png" alt=""><br>生活如雨，有伞就好！<br>记得，没有伞也不要怕，<br>别人能趟过去，自己也可以过去。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;其实生活就是一场雨，&lt;br&gt;有伞就能平安度过，&lt;br&gt;没有伞，就会被雨淋成落汤鸡。&lt;br&gt;朋友，你有伞吗？&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/life/life1.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;或许没有伞的人居多，&lt;br&gt;因为没伞，被雨淋得稀里哗啦。&lt;br&gt;每个
    
    </summary>
    
      <category term="生活" scheme="http://chenxiaoqiong.me/categories/life/"/>
    
      <category term="美文" scheme="http://chenxiaoqiong.me/categories/life/essay/"/>
    
    
      <category term="美文" scheme="http://chenxiaoqiong.me/tags/%E7%BE%8E%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>idea(IntelliJ IDEA)快捷键</title>
    <link href="http://chenxiaoqiong.me/2016-11-03/idea/"/>
    <id>http://chenxiaoqiong.me/2016-11-03/idea/</id>
    <published>2016-11-03T02:09:23.000Z</published>
    <updated>2016-11-03T06:37:23.175Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>IDEA 全称IntelliJ IDEA，是java语言开发的集成环境，IntelliJ在业界被公认为最好的java开发工具之一，尤其在智能代码助手、代码自动提示、重构、J2EE支持、Ant、JUnit、CVS整合、代码审查、 创新的GUI设计等方面的功能可以说是超常的。IDEA是JetBrains公司的产品，这家公司总部位于捷克共和国的首都布拉格，开发人员以严谨著称的东欧程序员为主。</p>
<h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><h3 id="最常用快捷键"><a href="#最常用快捷键" class="headerlink" title="最常用快捷键"></a>最常用快捷键</h3><p>Ctrl+N   查找类<br>Ctrl+Shift+N 查找文件<br>Alt+回车 导入包,自动修正<br>Alt+Insert 生成代码(如get,set方法,构造函数等)<br>Ctrl+X 删除行<br>Ctrl+D 复制行<br>Ctrl+/ 或 Ctrl+Shift+/  注释（// 或者/<em>…</em>/ ）<br>Ctrl+E 最近打开的文件<br>Ctrl+G 定位到某行<br>Ctrl+R 替换文本<br>Ctrl+F 查找文本<br>Ctrl+Shift+R 替换全局文本<br>Ctrl+Shift+F 查找全局文本<br>Ctrl+Alt+L  格式化代码<br>Ctrl+Alt+O 优化导入的类和包</p>
<h3 id="查询快捷键"><a href="#查询快捷键" class="headerlink" title="查询快捷键"></a>查询快捷键</h3><p>CTRL+N   查找类<br>CTRL+SHIFT+N  查找文件<br>CTRL+SHIFT+ALT+N 查找类中的方法或变量<br>CIRL+B   找变量的来源<br>CTRL+ALT+B  找所有的子类<br>CTRL+SHIFT+B  找变量的类<br>CTRL+G   定位行<br>CTRL+F   在当前窗口查找文本<br>CTRL+SHIFT+F  在指定窗口查找文本<br>CTRL+R   在 当前窗口替换文本<br>CTRL+SHIFT+R  在指定窗口替换文本<br>ALT+SHIFT+C  查找修改的文件<br>CTRL+E   最近打开的文件<br>F3   向下查找关键字出现位置<br>SHIFT+F3  向上一个关键字出现位置<br>F4   查找变量来源<br>CTRL+ALT+F7  选中的字符查找工程出现的地方<br>CTRL+SHIFT+O  弹出显示查找内容</p>
<h3 id="自动代码"><a href="#自动代码" class="headerlink" title="自动代码"></a>自动代码</h3><p>ALT+回车  导入包,自动修正<br>CTRL+ALT+L  格式化代码<br>CTRL+ALT+I  自动缩进<br>CTRL+ALT+O  优化导入的类和包<br>ALT+INSERT  生成代码(如GET,SET方法,构造函数等)<br>CTRL+E 最近更改的代码<br>CTRL+SHIFT+SPACE 自动补全代码<br>CTRL+空格  代码提示<br>CTRL+ALT+SPACE  类名或接口名提示<br>CTRL+P   方法参数提示<br>CTRL+J   自动代码<br>CTRL+ALT+T  把选中的代码放在 TRY{} IF{} ELSE{} 里</p>
<h3 id="复制快捷方式"><a href="#复制快捷方式" class="headerlink" title="复制快捷方式"></a>复制快捷方式</h3><p>CTRL+D   复制行<br>CTRL+X   剪切,删除行  </p>
<h3 id="其他快捷方式"><a href="#其他快捷方式" class="headerlink" title="其他快捷方式"></a>其他快捷方式</h3><p>CIRL+U   大小写切换<br>CTRL+Z   倒退<br>CTRL+SHIFT+Z  向前<br>CTRL+ALT+F12  资源管理器打开文件夹<br>ALT+F1   查找文件所在目录位置<br>SHIFT+ALT+INSERT 竖编辑模式<br>CTRL+/   注释//<br>CTRL+SHIFT+/  注释/<em>…</em>/<br>CTRL+W   选中代码，连续按会有其他效果<br>CTRL+B   快速打开光标处的类或方法<br>ALT+ ←/→  切换代码视图<br>CTRL+ALT ←/→  返回上次编辑的位置<br>ALT+ ↑/↓  在方法间快速移动定位<br>SHIFT+F6  重构-重命名<br>CTRL+H   显示类结构图<br>CTRL+Q   显示注释文档<br>ALT+1   快速打开或隐藏工程面板<br>CTRL+SHIFT+UP/DOWN 代码向上/下移动。<br>CTRL+UP/DOWN  光标跳转到第一行或最后一行下<br>ESC   光标返回编辑框<br>SHIFT+ESC  光标返回编辑框,关闭无用的窗口<br>F1   帮助千万别按,很卡!<br>CTRL+F4   非常重要下班都用</p>
<h2 id="快捷键设置"><a href="#快捷键设置" class="headerlink" title="快捷键设置"></a>快捷键设置</h2><p>file&gt;setting&gt;keymap<br><img src="/img/imgs/idea1.png" alt=""><br><img src="/img/imgs/idea2.png" alt=""><br>可以选择自己喜欢的模式，包括eclipse。也可以设置每一个快捷键，不过感觉太麻烦了</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;IDEA 全称IntelliJ IDEA，是java语言开发的集成环境，IntelliJ在业界被公认为最好的java开发工具之一，尤其在智能
    
    </summary>
    
      <category term="技术" scheme="http://chenxiaoqiong.me/categories/develop/"/>
    
      <category term="IntelliJ IDEA" scheme="http://chenxiaoqiong.me/categories/develop/IntelliJ-IDEA/"/>
    
    
      <category term="IntelliJ IDEA" scheme="http://chenxiaoqiong.me/tags/IntelliJ-IDEA/"/>
    
  </entry>
  
  <entry>
    <title>Nginx安装与配置</title>
    <link href="http://chenxiaoqiong.me/2016-10-17/nginx/"/>
    <id>http://chenxiaoqiong.me/2016-10-17/nginx/</id>
    <published>2016-10-17T09:04:27.000Z</published>
    <updated>2016-11-03T06:34:28.927Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><h3 id="安装pcre"><a href="#安装pcre" class="headerlink" title="安装pcre"></a>安装pcre</h3><ol>
<li>获取pcre编译安装包，在<a href="http://www.pcre.org/" target="_blank" rel="external">http://www.pcre.org/</a> 上可以获取当前最新的版本</li>
<li>解压缩pcre-xx.tar.gz包。</li>
<li>进入解压缩目录，执行./configure。</li>
<li>make &amp; make install</li>
</ol>
<blockquote>
<p> <code>可能发生错误</code><br>    <code>make: ***No targets specified and no makefile found. Stop.</code><br>    <code>解决方法</code><br>    <code>./configure -prefix=/usr/local -with-shared-without-debug</code><br>    <code>make</code><br>    <code>make install</code></p>
</blockquote>
<h3 id="安装openssl"><a href="#安装openssl" class="headerlink" title="安装openssl"></a>安装openssl</h3><ol>
<li>获取openssl编译安装包，在<a href="http://www.openssl.org/source/上可以获取当前最新的版本。" target="_blank" rel="external">http://www.openssl.org/source/上可以获取当前最新的版本。</a></li>
<li>解压缩openssl-xx.tar.gz包。</li>
<li>进入解压缩目录，执行./config。</li>
<li>make &amp; make install</li>
</ol>
<h3 id="安装zlib"><a href="#安装zlib" class="headerlink" title="安装zlib"></a>安装zlib</h3><ol>
<li>获取zlib编译安装包，在<a href="http://www.zlib.net/上可以获取当前最新的版本。" target="_blank" rel="external">http://www.zlib.net/上可以获取当前最新的版本。</a></li>
<li>解压缩openssl-xx.tar.gz包。</li>
<li>进入解压缩目录，执行./configure。</li>
<li>make &amp; make install</li>
</ol>
<h3 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h3><ol>
<li>获取nginx，在<a href="http://nginx.org/en/download.html上可以获取当前最新的版本。" target="_blank" rel="external">http://nginx.org/en/download.html上可以获取当前最新的版本。</a></li>
<li>解压缩nginx-xx.tar.gz包。</li>
<li>进入解压缩目录，执行./configure</li>
<li>make &amp; make install</li>
</ol>
<blockquote>
<p><code>可能出现错误：</code><br>    <code>make: *** No rule to make target &#39;build&#39;, needed by &#39;default&#39;.  Stop.</code><br>    <code>解决办法：</code><br>    <code>./configure  --sbin-path=/usr/local/nginx/nginx-1.11.3/nginx\</code><br>    <code>--pid-path=/usr/local/nginx/nginx-1.11.3/nginx.pid\</code><br>    <code>--with-http_ssl_module\</code><br>    <code>//指定依赖路径</code><br>    <code>--with-pcre=/usr/local/nginx/pcre-8.36 \</code><br>    <code>--with-zlib=/usr/local/nginx/zlib-1.2.8 \</code><br>    <code>--with-openssl=/usr/local/nginx/openssl-1.0.1h</code></p>
</blockquote>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><h3 id="nginx启动与重启"><a href="#nginx启动与重启" class="headerlink" title="nginx启动与重启"></a>nginx启动与重启</h3><blockquote>
<pre><code>cd usr/local/nginx/sbin
./nginx
如果无法启动执行命令：
ln -s /usr/local/lib/libpcre.so.1 /lib64
重启：
./nginx –s reload
</code></pre></blockquote>
<h3 id="测试效果"><a href="#测试效果" class="headerlink" title="测试效果"></a>测试效果</h3><p>启动之后打开浏览器输入localhost，出现如下页面，恭喜你安装成功！<br><img src="/img/imgs/nginx.jpg" alt=""></p>
<p>更详细可参考：<a href="http://www.cnblogs.com/jianxie/p/3990377.html" target="_blank" rel="external">http://www.cnblogs.com/jianxie/p/3990377.html</a></p>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="负载均衡的4种配置方式"><a href="#负载均衡的4种配置方式" class="headerlink" title="负载均衡的4种配置方式"></a>负载均衡的4种配置方式</h3><ul>
<li><p>轮询（默认）<br> 每个请求按时间顺序逐一分配到不同的后端服务器，如果后端服务器down掉，能自动剔除。 </p>
</li>
<li><p>weight<br> 指定轮询几率，weight和访问比率成正比，用于后端服务器性能不均的情况。 </p>
</li>
<li><p>ip_hash<br> 每个请求按访问ip的hash结果分配，这样每个访客固定访问一个后端服务器，可以解决session的问题。  </p>
</li>
<li><p>第三方<br> fair（按后端服务器的响应时间来分配请求，响应时间短的优先分配。）<br> url_hash</p>
</li>
</ul>
<p>更详细可参考：<br><a href="http://www.linuxidc.com/Linux/2015-03/115207.htm" target="_blank" rel="external">http://www.linuxidc.com/Linux/2015-03/115207.htm</a><br><a href="http://www.cnblogs.com/xiaogangqq123/archive/2011/03/04/1971002.html" target="_blank" rel="external">http://www.cnblogs.com/xiaogangqq123/archive/2011/03/04/1971002.html</a><br><a href="http://www.php100.com/html/program/nginx/2013/0905/5525.html" target="_blank" rel="external">http://www.php100.com/html/program/nginx/2013/0905/5525.html</a></p>
<h3 id="静态资源配置"><a href="#静态资源配置" class="headerlink" title="静态资源配置"></a>静态资源配置</h3><blockquote>
<pre><code>location ~* \.(gif|jpg|jpeg|png|bmp|swf|css|js|html)$ {
root         /usr/local/nginx/nginx-1.11.3/html;   #在此目录下放项目同名文件夹静态资源
expires      30d;
}
</code></pre></blockquote>
<hr>
<h2 id="相关链接："><a href="#相关链接：" class="headerlink" title="相关链接："></a>相关链接：</h2><p><a href="http://www.cnblogs.com/skynet/p/4146083.html（吴秦）" target="_blank" rel="external">http://www.cnblogs.com/skynet/p/4146083.html（吴秦）</a><br><a href="http://www.cnblogs.com/zhuhongbao/archive/2013/06/04/3118061.html" target="_blank" rel="external">http://www.cnblogs.com/zhuhongbao/archive/2013/06/04/3118061.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安装步骤&quot;&gt;&lt;a href=&quot;#安装步骤&quot; class=&quot;headerlink&quot; title=&quot;安装步骤&quot;&gt;&lt;/a&gt;安装步骤&lt;/h2&gt;&lt;h3 id=&quot;安装pcre&quot;&gt;&lt;a href=&quot;#安装pcre&quot; class=&quot;headerlink&quot; title=&quot;安装pcr
    
    </summary>
    
      <category term="技术" scheme="http://chenxiaoqiong.me/categories/develop/"/>
    
      <category term="nginx" scheme="http://chenxiaoqiong.me/categories/develop/nginx/"/>
    
    
      <category term="nginx" scheme="http://chenxiaoqiong.me/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://chenxiaoqiong.me/2016-10-14/hello-world/"/>
    <id>http://chenxiaoqiong.me/2016-10-14/hello-world/</id>
    <published>2016-10-14T07:02:22.994Z</published>
    <updated>2016-11-01T09:38:06.086Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
      <category term="hexo" scheme="http://chenxiaoqiong.me/tags/hexo/"/>
    
  </entry>
  
</feed>
