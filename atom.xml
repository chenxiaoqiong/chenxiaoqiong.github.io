<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ChenXiaoqiong</title>
  <subtitle>混迹在程序界的一枚小女子 ^♪ ^♪ ^♪</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.chenxiaoqiong.com/"/>
  <updated>2017-05-03T07:18:47.710Z</updated>
  <id>http://www.chenxiaoqiong.com/</id>
  
  <author>
    <name>ChenXiaoqiong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>linux环境搭建（java+mysql+maven+tomcat+nginx）</title>
    <link href="http://www.chenxiaoqiong.com/articles/linux-java-mysql-maven-tomcat-nginx/"/>
    <id>http://www.chenxiaoqiong.com/articles/linux-java-mysql-maven-tomcat-nginx/</id>
    <published>2017-04-12T11:04:00.000Z</published>
    <updated>2017-05-03T07:18:47.710Z</updated>
    
    <content type="html"><![CDATA[<h2 id="jdk安装"><a href="#jdk安装" class="headerlink" title="jdk安装"></a>jdk安装</h2><ol>
<li>到<a href="http://www.oracle.com/technetwork/java/javase/downloads" target="_blank" rel="external">官网</a>下载安装包，拷贝下载好的jdk-8u121-linux-arm32-vfp-hflt.tar.gz到你要安装的目录，我的目录是：/usr/local/java</li>
<li><p>解压jdk到当前目录 </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tar -zxvf jdk-8u121-linux-arm32-vfp-hflt.tar.gz</div></pre></td></tr></table></figure>
</li>
<li><p>编辑配置文件（命令：vim /etc/profile），添加如下内容：JAVA_HOME根据实际目录   </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">JAVA_HOME=/usr/local/java/jdk1.8.0_121</div><div class="line">JRE_HOME=/usr/local/java/jdk1.8.0_121/jre</div><div class="line">CLASS_PATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib</div><div class="line">PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin</div><div class="line">export JAVA_HOME JRE_HOME CLASS_PATH PATH</div></pre></td></tr></table></figure>
</li>
<li><p>重新加载配置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">source /etc/profile</div></pre></td></tr></table></figure>
</li>
<li><p>查看版本验证是否安装成功 </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">java -version </div><div class="line">java version &quot;1.8.0_121&quot;</div><div class="line">Java(TM) SE Runtime Environment (build 1.8.0_121-b13)</div><div class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.121-b13, mixed mode)</div></pre></td></tr></table></figure>
</li>
</ol>
<p>恭喜你，jdk已经安装成功！</p>
<h2 id="MySQL安装"><a href="#MySQL安装" class="headerlink" title="MySQL安装"></a>MySQL安装</h2><ol>
<li><p>Centos6在rpm安装</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">rpm -ivh http://dev.mysql.com/get/mysql-community-release-el6-5.noarch.rpm</div><div class="line">----------</div><div class="line">yum install mysql-server –y</div></pre></td></tr></table></figure>
</li>
<li><p>启动</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service mysqld start</div></pre></td></tr></table></figure>
</li>
<li><p>初始化</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql_secure_installation</div></pre></td></tr></table></figure>
</li>
<li><p>下面按照你自己的情况输入Y/n,第一次密码为空，直接回车:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">Enter current password for root (enter for none):</div><div class="line">Set root password? [Y/n]</div><div class="line">Remove anonymous users? [Y/n]</div><div class="line">Disallow root login remotely? [Y/n]</div><div class="line">Remove test database and access to it? [Y/n]</div><div class="line">Reload privilege tables now? [Y/n]</div></pre></td></tr></table></figure>
</li>
<li><p>启动mysql：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql –uroot –p******</div></pre></td></tr></table></figure>
</li>
</ol>
<p>现在就可以开始你的mysql操作了！</p>
<h2 id="maven安装"><a href="#maven安装" class="headerlink" title="maven安装"></a>maven安装</h2><ol>
<li>到<a href="http://maven.apache.org/download.cgi" target="_blank" rel="external">maven官网</a>下载安装包</li>
<li>拷贝下载好的apache-maven-3.3.9 .tar.gz到你要安装的目录，我的目录是：/usr/local/maven</li>
<li><p>解压安装包到当前文件夹</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tar-zxvf apache-maven-3.3.9 .tar.gz</div></pre></td></tr></table></figure>
</li>
<li><p>编辑配置文件（vim /etc/profile），添加如下内容：MAVEN_HOME根据你自己的路径来</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">export MAVEN_HOME=/usr/local/apache-maven-3.3.9  </div><div class="line">export PATH=$JAVA_HOME/bin:$MAVEN_HOME/bin:$ANTX_HOME/bin:$ANT_HOME/bin:$MYSQL_HOME/bin:$PATH</div></pre></td></tr></table></figure>
</li>
<li><p>执行命令重新加载配置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">source /etc/profile</div></pre></td></tr></table></figure>
</li>
<li><p>查看版本验证是否安装成功</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mvn -v</div><div class="line">Apache Maven 3.3.9 (bb52d8502b132ec0a5a3f4c09453c07478323dc5; 2015-11-11T00:41:47+08:00)</div><div class="line">Maven home: /usr/local/maven/apache-maven-3.3.9</div><div class="line">Java version: 1.8.0_121, vendor: Oracle Corporation</div><div class="line">Java home: /usr/local/java/jdk1.8.0_121/jre</div><div class="line">Default locale: en_US, platform encoding: UTF-8</div><div class="line">OS name: &quot;linux&quot;, version: &quot;3.10.0-514.6.2.el7.x86_64&quot;, arch: &quot;amd64&quot;, family: &quot;unix&quot;</div></pre></td></tr></table></figure>
</li>
</ol>
<p>恭喜你，maven安装成功！</p>
<h2 id="tomcat安装"><a href="#tomcat安装" class="headerlink" title="tomcat安装"></a>tomcat安装</h2><p>到<a href="http://tomcat.apache.org/" target="_blank" rel="external">官网</a>下载XX.tar.gz安装包</p>
<p>解压安装包到你的目录就可以使用了</p>
<h2 id="nginx安装"><a href="#nginx安装" class="headerlink" title="nginx安装"></a>nginx安装</h2><p>参考我的这篇文章 <a href="http://chenxiaoqiong.com/articles/nginx" target="_blank" rel="external">Nginx安装与配置</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;jdk安装&quot;&gt;&lt;a href=&quot;#jdk安装&quot; class=&quot;headerlink&quot; title=&quot;jdk安装&quot;&gt;&lt;/a&gt;jdk安装&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;到&lt;a href=&quot;http://www.oracle.com/technetwork/java/jav
    
    </summary>
    
      <category term="技术" scheme="http://www.chenxiaoqiong.com/categories/develop/"/>
    
      <category term="linux" scheme="http://www.chenxiaoqiong.com/categories/develop/linux/"/>
    
    
      <category term="linux" scheme="http://www.chenxiaoqiong.com/tags/linux/"/>
    
      <category term="tomcat" scheme="http://www.chenxiaoqiong.com/tags/tomcat/"/>
    
      <category term="环境搭建" scheme="http://www.chenxiaoqiong.com/tags/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
      <category term="mysql" scheme="http://www.chenxiaoqiong.com/tags/mysql/"/>
    
      <category term="java" scheme="http://www.chenxiaoqiong.com/tags/java/"/>
    
      <category term="maven" scheme="http://www.chenxiaoqiong.com/tags/maven/"/>
    
      <category term="nginx" scheme="http://www.chenxiaoqiong.com/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>Linux Crontab 定时任务</title>
    <link href="http://www.chenxiaoqiong.com/articles/crontab/"/>
    <id>http://www.chenxiaoqiong.com/articles/crontab/</id>
    <published>2017-04-05T03:04:00.000Z</published>
    <updated>2017-04-05T07:42:39.571Z</updated>
    
    <content type="html"><![CDATA[<p>  作为菜鸟的我一直以为linux定时任务是一个很复杂的东西，近期自己要写了才知道原来这么简单。总结如下：<br><img src="/img/imgs/crontab1.png" alt=""></p>
<h2 id="crontab命令"><a href="#crontab命令" class="headerlink" title="crontab命令"></a>crontab命令</h2><p>crontab -l //列出某个用户cron服务的详细内容<br>crontab -e //编辑某个用户的cron服务，相当于进入vi编辑模式<br>crontab -r //删除某个用户的cron服务<br>crontab -u //设定某个用户的cron服务，一般root用户在执行这个命令的时候需要此参数。比如说root查看自己的cron设置：crontab -u root -l</p>
<h2 id="描述格式"><a href="#描述格式" class="headerlink" title="描述格式"></a>描述格式</h2><h3 id="格式说明"><a href="#格式说明" class="headerlink" title="格式说明"></a>格式说明</h3><pre><code># Example of job definition:
# .---------------- minute (0 - 59)
# |  .------------- hour (0 - 23)
# |  |  .---------- day of month (1 - 31)
# |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...
# |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat
# |  |  |  |  |
# *  *  *  *  * user-name  command to be executed
</code></pre><p>除了上述数字还有几个个特殊的符号就是”*“、”/“和”-“、”,”，*代表所有的取值范围内的数字，”/“代表每的意思,”/5”表示每5个单位，”-“代表从某个数字到某个数字,”,”分开几个离散的数字。</p>
<h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><ul>
<li><p>每天早上6点执行一次/root/scrīpts/backup.sh这个命令<br>0 6 * * * /root/scrīpts/backup.sh </p>
</li>
<li><p>每5分钟执行一次/root/scrīpts/backup.sh这个命令<br>*/5 * * * * /root/scrīpts/backup.sh  </p>
</li>
<li><p>每两个小时<br>0 */2 * * * command line</p>
</li>
<li><p>每个月的4号和每个礼拜的礼拜一到礼拜三的早上11点<br>0 11 4 * 1-3 command line</p>
<p>cron服务会每分钟检查一次/etc/crontab、/etc/cron.d/、/var/spool/cron文件下的变更。如果发现变化，就会下载到存储器中。因此，即使crontab文件改变了，程序也不需要重新启动。</p>
</li>
</ul>
<h2 id="权限"><a href="#权限" class="headerlink" title="权限"></a>权限</h2><p>crontab权限问题到/var/adm/cron/下一看，文件cron.allow和cron.deny是否存在<br>用法如下： </p>
<ul>
<li><p>如果两个文件都不存在，则只有root用户才能使用crontab命令。 </p>
</li>
<li><p>如果cron.allow存在但cron.deny不存在，则只有列在cron.allow文件里的用户才能使用crontab命令，如果root用户也不在里面，则root用户也不能使用crontab。 </p>
</li>
<li><p>如果cron.allow不存在, cron.deny存在，则只有列在cron.deny文件里面的用户不能使用crontab命令，其它用户都能使用。 </p>
</li>
<li><p>如果两个文件都存在，则列在cron.allow文件中而且没有列在cron.deny中的用户可以使用crontab，如果两个文件中都有同一个用户，</p>
</li>
<li>以cron.allow文件里面是否有该用户为准，如果cron.allow中有该用户，则可以使用crontab命令。</li>
</ul>
<h2 id="服务的启动"><a href="#服务的启动" class="headerlink" title="服务的启动"></a>服务的启动</h2><p>cron是一个linux下 的定时执行工具，可以在无需人工干预的情况下运行作业。</p>
<ul>
<li>　　/sbin/service crond start    //启动服务</li>
<li>　　/sbin/service crond stop     //关闭服务</li>
<li>　　/sbin/service crond restart  //重启服务</li>
<li>　　/sbin/service crond reload   //重新载入配置</li>
<li>　　/sbin/service crond status   //查看服务状态 </li>
</ul>
<p>另外如果只需要任务定时执行一次，可以用at实现。我发现这篇文章就写的不错，可以参考<a href="http://www.cnblogs.com/liyanbin/p/6290096.html" target="_blank" rel="external">http://www.cnblogs.com/liyanbin/p/6290096.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;  作为菜鸟的我一直以为linux定时任务是一个很复杂的东西，近期自己要写了才知道原来这么简单。总结如下：&lt;br&gt;&lt;img src=&quot;/img/imgs/crontab1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;crontab命令&quot;&gt;&lt;a href=&quot;#cront
    
    </summary>
    
      <category term="技术" scheme="http://www.chenxiaoqiong.com/categories/develop/"/>
    
      <category term="linux" scheme="http://www.chenxiaoqiong.com/categories/develop/linux/"/>
    
    
      <category term="linux" scheme="http://www.chenxiaoqiong.com/tags/linux/"/>
    
      <category term="crontab" scheme="http://www.chenxiaoqiong.com/tags/crontab/"/>
    
  </entry>
  
  <entry>
    <title>MapReduce实例（二）</title>
    <link href="http://www.chenxiaoqiong.com/articles/mapreduce2/"/>
    <id>http://www.chenxiaoqiong.com/articles/mapreduce2/</id>
    <published>2017-03-16T09:04:00.000Z</published>
    <updated>2017-04-05T02:38:48.965Z</updated>
    
    <content type="html"><![CDATA[<p>看了 <a href="http://blog.csdn.net/acmchenxiaoqiong/article/details/62888069" target="_blank" rel="external">MapReduce实例（一）</a>，应该对mapreduce有了基本了解，试着自己去实现下面的例子，相信你会有收获的。</p>
<h2 id="实例需求"><a href="#实例需求" class="headerlink" title="实例需求"></a>实例需求</h2><p>计算输入文件中的单词出现的次数。输入文件中的内容单词之间用空格隔开，要求输出文件中输出单词、空格、单词出现的次数。</p>
<blockquote>
<p>输入文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">I am a pretty girl</div><div class="line">I am a programmer I am so proud</div></pre></td></tr></table></figure></p>
<p>输出文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">I	3</div><div class="line">a	2</div><div class="line">am	3</div><div class="line">girl	1</div><div class="line">pretty	1</div><div class="line">programmer	1</div><div class="line">proud	1</div><div class="line">so	1</div></pre></td></tr></table></figure></p>
</blockquote>
<h2 id="设计思路"><a href="#设计思路" class="headerlink" title="设计思路"></a>设计思路</h2><p>熟悉MapReduce过程的读者会很快想到在MapReduce过程中就有排序，我们可以利用IntWritable排序规则，map按数字大小对key进行排序，reduce拿到key，value-list之后，将输入的key作为value输出。</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><p>代码已上传至我的git：<a href="https://github.com/chenxiaoqiong/sortMapReduce" target="_blank" rel="external">https://github.com/chenxiaoqiong/sortMapReduce</a><br>主要代码：</p>
<pre><code>/**
 * &lt;h1&gt; MapReduce实例（二） &lt;/h1&gt;
 * SortMapReduce：对输入数字进行排序输出
 * Created by chenxiaoqiong on 2017/3/27 0017 下午 2:14.
 */
public class SortMapReduce extends Configured implements Tool {

    /**
     * map：处理输入文件：按输入数字排序输出（数字 1）
     */
    public static class SortMapper
            extends Mapper&lt;LongWritable, Text, IntWritable, IntWritable&gt; {

        private final static IntWritable ints = new IntWritable(1);
        private IntWritable keyword = new IntWritable();

        @Override
        protected void map(LongWritable key, Text value, Context context)
                throws IOException, InterruptedException {
            String line=value.toString();

            keyword.set(Integer.parseInt(line));

            // void write(KEYOUT var1, VALUEOUT var2) 此方法会按KEYOUT var1自动排序
            context.write(keyword, ints);
        }
    }

    /**
     * reduce：输出序号和map排序好的数字（序号 数字）
     */
    public static class SortReducer
            extends Reducer&lt;IntWritable, IntWritable, IntWritable, IntWritable&gt; {

        private IntWritable linenum  = new IntWritable(1);

        @Override
        protected void reduce(IntWritable key, Iterable&lt;IntWritable&gt; value, Context context)
                throws IOException, InterruptedException {

            for(IntWritable val:value){

                context.write(linenum, key);

                linenum = new IntWritable(linenum.get()+1);

            }
        }
    }

    public int run(String[] args) throws IOException, ClassNotFoundException, InterruptedException {
        //获取配置文件：
        Configuration conf = super.getConf();

        //创建job：
        Job job = Job.getInstance(conf, this.getClass().getSimpleName());
        job.setJarByClass(SortMapReduce.class);

        //配置作业：
        // Input --&gt; Map --&gt; Reduce --&gt; Output
        // Input:
        Path inPath = new Path(args[0]);
        FileInputFormat.addInputPath(job, inPath);
        //FileInputFormat过程会将文件处理（Format）成 &lt;偏移量,每一行内容&gt; 的key value对。

        //Map  设置Mapper类，设置Mapper类输出的Key、Value的类型：
        job.setMapperClass(SortMapper.class);
        job.setMapOutputKeyClass(IntWritable.class);
        job.setMapOutputValueClass(IntWritable.class);

        //Reduce  设置Reducer类， 设置最终输出的 Key、Value的类型（setOutputKeyClass、setOutputValueClass）：
        job.setReducerClass(SortReducer.class);
        job.setOutputKeyClass(Text.class);
        job.setOutputValueClass(IntWritable.class);

        //Output 设置输出路径
        Path outPath = new Path(args[1]);
        FileOutputFormat.setOutputPath(job, outPath);

        //提交任务
        boolean isSucess = job.waitForCompletion(true);
        return isSucess ? 1 : 0;     //成功返回1 ，失败返回0
    }

    public static void main(String[] args) throws Exception {
        Configuration conf = new Configuration();
        int status = ToolRunner.run(conf, new SortMapReduce(), args);
        System.exit(status);
    }
}
</code></pre><p>pom.xml<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span>?&gt;</div><div class="line">&lt;project xmlns=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></div><div class="line">         xmlns:xsi=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></div><div class="line">         xsi:schemaLocation=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</div><div class="line">    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</div><div class="line"></div><div class="line">    &lt;groupId&gt;hadoop&lt;/groupId&gt;</div><div class="line">    &lt;artifactId&gt;countMapReduce&lt;/artifactId&gt;</div><div class="line">    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;</div><div class="line"></div><div class="line">    &lt;repositories&gt;</div><div class="line">        &lt;repository&gt;</div><div class="line">            &lt;id&gt;apache&lt;/id&gt;</div><div class="line">            &lt;url&gt;http://maven.apache.org&lt;/url&gt;</div><div class="line">        &lt;/repository&gt;</div><div class="line">    &lt;/repositories&gt;</div><div class="line">    &lt;dependencies&gt;</div><div class="line">        &lt;dependency&gt;</div><div class="line">            &lt;groupId&gt;org.apache.hadoop&lt;/groupId&gt;</div><div class="line">            &lt;artifactId&gt;hadoop-common&lt;/artifactId&gt;</div><div class="line">            &lt;version&gt;2.7.3&lt;/version&gt;</div><div class="line">        &lt;/dependency&gt;</div><div class="line">        &lt;dependency&gt;</div><div class="line">            &lt;groupId&gt;org.apache.hadoop&lt;/groupId&gt;</div><div class="line">            &lt;artifactId&gt;hadoop-hdfs&lt;/artifactId&gt;</div><div class="line">            &lt;version&gt;2.7.3&lt;/version&gt;</div><div class="line">        &lt;/dependency&gt;</div><div class="line">        &lt;dependency&gt;</div><div class="line">            &lt;groupId&gt;org.apache.hadoop&lt;/groupId&gt;</div><div class="line">            &lt;artifactId&gt;hadoop-client&lt;/artifactId&gt;</div><div class="line">            &lt;version&gt;2.7.3&lt;/version&gt;</div><div class="line">        &lt;/dependency&gt;</div><div class="line">        &lt;dependency&gt;</div><div class="line">            &lt;groupId&gt;org.apache.hadoop&lt;/groupId&gt;</div><div class="line">            &lt;artifactId&gt;hadoop-core&lt;/artifactId&gt;</div><div class="line">            &lt;version&gt;1.2.1&lt;/version&gt;</div><div class="line">        &lt;/dependency&gt;</div><div class="line">    &lt;/dependencies&gt;</div><div class="line">    &lt;build&gt;</div><div class="line">        &lt;plugins&gt;</div><div class="line">            &lt;plugin&gt;</div><div class="line">                &lt;artifactId&gt;maven-dependency-plugin&lt;/artifactId&gt;</div><div class="line">                &lt;configuration&gt;</div><div class="line">                    &lt;excludeTransitive&gt;<span class="literal">false</span>&lt;/excludeTransitive&gt;</div><div class="line">                    &lt;stripVersion&gt;<span class="literal">true</span>&lt;/stripVersion&gt;</div><div class="line">                    &lt;outputDirectory&gt;./lib&lt;/outputDirectory&gt;</div><div class="line">                &lt;/configuration&gt;</div><div class="line"></div><div class="line">            &lt;/plugin&gt;</div><div class="line">        &lt;/plugins&gt;</div><div class="line">    &lt;/build&gt;</div><div class="line">&lt;/project&gt;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;看了 &lt;a href=&quot;http://blog.csdn.net/acmchenxiaoqiong/article/details/62888069&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MapReduce实例（一）&lt;/a&gt;，应该对mapreduc
    
    </summary>
    
      <category term="技术" scheme="http://www.chenxiaoqiong.com/categories/develop/"/>
    
      <category term="MapReduce" scheme="http://www.chenxiaoqiong.com/categories/develop/MapReduce/"/>
    
    
      <category term="Hadoop" scheme="http://www.chenxiaoqiong.com/tags/Hadoop/"/>
    
      <category term="MapReduce" scheme="http://www.chenxiaoqiong.com/tags/MapReduce/"/>
    
      <category term="大数据" scheme="http://www.chenxiaoqiong.com/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
  </entry>
  
  <entry>
    <title>MapReduce实例（一）</title>
    <link href="http://www.chenxiaoqiong.com/articles/mapreduce1/"/>
    <id>http://www.chenxiaoqiong.com/articles/mapreduce1/</id>
    <published>2017-03-16T09:04:00.000Z</published>
    <updated>2017-04-05T02:39:11.246Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><p><strong>Hadoop:</strong>的框架最核心的设计就是：HDFS和MapReduce。HDFS为海量的数据提供了存储，则MapReduce为海量的数据提供了计算。<br><strong>MapReduce:</strong>是处理大量半结构化数据集合的编程模型。最简单的 MapReduce应用程序至少包含 3 个部分：一个 Map 函数、一个 Reduce 函数和一个 main 函数。我的简单理解是map按照一定规则对输入做一系列的处理，reduce进行输出，输出前可能做一些操作，比如统计之类的。</p>
<h2 id="一个有趣的例子"><a href="#一个有趣的例子" class="headerlink" title="一个有趣的例子"></a>一个有趣的例子</h2><p><img src="http://img.blog.csdn.net/20170317145634434?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYWNtY2hlbnhpYW9xaW9uZw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""><br>你想数出一摞牌中有多少张黑桃。直观方式是一张一张检查并且数出有多少张是黑桃？<br>MapReduce方法则是：</p>
<ol>
<li>给在座的所有玩家中分配这摞牌</li>
<li>让每个玩家数自己手中的牌有几张是黑桃，然后把这个数目汇报给你</li>
<li>你把所有玩家告诉你的数字加起来，得到最后的结论</li>
</ol>
<h2 id="实例需求"><a href="#实例需求" class="headerlink" title="实例需求"></a>实例需求</h2><p>计算输入文件中的单词出现的次数。输入文件中的内容单词之间用空格隔开，要求输出文件中输出单词、空格、单词出现的次数。</p>
<blockquote>
<p>输入文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">I am a pretty girl</div><div class="line">I am a programmer I am so proud</div></pre></td></tr></table></figure></p>
<p>输出文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">I	3</div><div class="line">a	2</div><div class="line">am	3</div><div class="line">girl	1</div><div class="line">pretty	1</div><div class="line">programmer	1</div><div class="line">proud	1</div><div class="line">so	1</div></pre></td></tr></table></figure></p>
</blockquote>
<h2 id="设计思路"><a href="#设计思路" class="headerlink" title="设计思路"></a>设计思路</h2><p>根据map的规则，我们读取输入文件里的每一行，拿到每一个单词，输出[单词 1]，reduce拿到[key,value-list]，循环list统计每一个key出现的次数，输出[单词 次数]</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><p>代码已上传至我的git：<a href="https://github.com/chenxiaoqiong/worldCountMapReduce" target="_blank" rel="external">https://github.com/chenxiaoqiong/worldCountMapReduce</a><br>主要代码：</p>
<pre><code>/**
* &lt;h1&gt; MapReduce实例（一） &lt;/h1&gt;
* WordCountMapReduce：计算每个单词出现的次数
* Created by chenxiaoqiong on 2017/3/01 0017 下午 2:14.
*/
public class WordCountMapReduce extends Configured implements Tool {

    /**
     * map:处理输入文件，输出（单词 1）
     */
    public static class WordCountMapper
            extends Mapper&lt;LongWritable, Text, Text, IntWritable&gt; {

        private final static IntWritable ints = new IntWritable(1);
        private Text keyword = new Text();

        @Override
        protected void map(LongWritable key, Text value, Context context)
                throws IOException, InterruptedException {
            String[] values = value.toString().split(&quot; &quot;);
            for (String vs : values) {
                keyword.set(vs);
                context.write(keyword, ints);
            }
        }
    }

    /**
     * reduce：统计map输出，输出（单词，count）
     */
    public static class WordCountReducer
            extends Reducer&lt;Text, IntWritable, Text, IntWritable&gt; {

        private IntWritable inw = new IntWritable();

        @Override
        protected void reduce(Text key, Iterable&lt;IntWritable&gt; value, Context context)
                throws IOException, InterruptedException {
            int sum = 0;
            for (IntWritable val : value) {
                sum += val.get();
            }
            inw.set(sum);
            context.write(key, inw);
        }
    }

    public int run(String[] args) throws IOException, ClassNotFoundException, InterruptedException {
        //获取配置文件：
        Configuration conf = super.getConf();

        //创建job：
        Job job = Job.getInstance(conf, this.getClass().getSimpleName());
        job.setJarByClass(WordCountMapReduce.class);

        //配置作业：
        // Input --&gt; Map --&gt; Reduce --&gt; Output
        // Input:
        Path inPath = new Path(args[0]);
        FileInputFormat.addInputPath(job, inPath);
        //FileInputFormat过程会将文件处理（Format）成 &lt;偏移量,每一行内容&gt; 的key value对。

        //Map  设置Mapper类，设置Mapper类输出的Key、Value的类型：
        job.setMapperClass(WordCountMapper.class);
        job.setMapOutputKeyClass(Text.class);
        job.setMapOutputValueClass(IntWritable.class);

        //Reduce  设置Reducer类， 设置最终输出的 Key、Value的类型（setOutputKeyClass、setOutputValueClass）：
        job.setReducerClass(WordCountReducer.class);
        job.setOutputKeyClass(Text.class);
        job.setOutputValueClass(IntWritable.class);

        //Output 设置输出路径
        Path outPath = new Path(args[1]);
        FileOutputFormat.setOutputPath(job, outPath);

        //提交任务
        boolean isSucess = job.waitForCompletion(true);
        return isSucess ? 1 : 0;     //成功返回1 ，失败返回0
    }

    public static void main(String[] args) throws Exception {
        Configuration conf = new Configuration();
        int status = ToolRunner.run(conf, new WordCountMapReduce(), args);
        System.exit(status);
    }
}
</code></pre><p>pom.xml<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span>?&gt;</div><div class="line">&lt;project xmlns=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></div><div class="line">         xmlns:xsi=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></div><div class="line">         xsi:schemaLocation=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</div><div class="line">    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</div><div class="line"></div><div class="line">    &lt;groupId&gt;hadoop&lt;/groupId&gt;</div><div class="line">    &lt;artifactId&gt;countMapReduce&lt;/artifactId&gt;</div><div class="line">    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;</div><div class="line"></div><div class="line">    &lt;repositories&gt;</div><div class="line">        &lt;repository&gt;</div><div class="line">            &lt;id&gt;apache&lt;/id&gt;</div><div class="line">            &lt;url&gt;http://maven.apache.org&lt;/url&gt;</div><div class="line">        &lt;/repository&gt;</div><div class="line">    &lt;/repositories&gt;</div><div class="line">    &lt;dependencies&gt;</div><div class="line">        &lt;dependency&gt;</div><div class="line">            &lt;groupId&gt;org.apache.hadoop&lt;/groupId&gt;</div><div class="line">            &lt;artifactId&gt;hadoop-common&lt;/artifactId&gt;</div><div class="line">            &lt;version&gt;2.7.3&lt;/version&gt;</div><div class="line">        &lt;/dependency&gt;</div><div class="line">        &lt;dependency&gt;</div><div class="line">            &lt;groupId&gt;org.apache.hadoop&lt;/groupId&gt;</div><div class="line">            &lt;artifactId&gt;hadoop-hdfs&lt;/artifactId&gt;</div><div class="line">            &lt;version&gt;2.7.3&lt;/version&gt;</div><div class="line">        &lt;/dependency&gt;</div><div class="line">        &lt;dependency&gt;</div><div class="line">            &lt;groupId&gt;org.apache.hadoop&lt;/groupId&gt;</div><div class="line">            &lt;artifactId&gt;hadoop-client&lt;/artifactId&gt;</div><div class="line">            &lt;version&gt;2.7.3&lt;/version&gt;</div><div class="line">        &lt;/dependency&gt;</div><div class="line">        &lt;dependency&gt;</div><div class="line">            &lt;groupId&gt;org.apache.hadoop&lt;/groupId&gt;</div><div class="line">            &lt;artifactId&gt;hadoop-core&lt;/artifactId&gt;</div><div class="line">            &lt;version&gt;1.2.1&lt;/version&gt;</div><div class="line">        &lt;/dependency&gt;</div><div class="line">    &lt;/dependencies&gt;</div><div class="line">    &lt;build&gt;</div><div class="line">        &lt;plugins&gt;</div><div class="line">            &lt;plugin&gt;</div><div class="line">                &lt;artifactId&gt;maven-dependency-plugin&lt;/artifactId&gt;</div><div class="line">                &lt;configuration&gt;</div><div class="line">                    &lt;excludeTransitive&gt;<span class="literal">false</span>&lt;/excludeTransitive&gt;</div><div class="line">                    &lt;stripVersion&gt;<span class="literal">true</span>&lt;/stripVersion&gt;</div><div class="line">                    &lt;outputDirectory&gt;./lib&lt;/outputDirectory&gt;</div><div class="line">                &lt;/configuration&gt;</div><div class="line"></div><div class="line">            &lt;/plugin&gt;</div><div class="line">        &lt;/plugins&gt;</div><div class="line">    &lt;/build&gt;</div><div class="line">&lt;/project&gt;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;基本概念&quot;&gt;&lt;a href=&quot;#基本概念&quot; class=&quot;headerlink&quot; title=&quot;基本概念&quot;&gt;&lt;/a&gt;基本概念&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Hadoop:&lt;/strong&gt;的框架最核心的设计就是：HDFS和MapReduce。HDFS为海量的数据提
    
    </summary>
    
      <category term="技术" scheme="http://www.chenxiaoqiong.com/categories/develop/"/>
    
      <category term="MapReduce" scheme="http://www.chenxiaoqiong.com/categories/develop/MapReduce/"/>
    
    
      <category term="Hadoop" scheme="http://www.chenxiaoqiong.com/tags/Hadoop/"/>
    
      <category term="MapReduce" scheme="http://www.chenxiaoqiong.com/tags/MapReduce/"/>
    
      <category term="大数据" scheme="http://www.chenxiaoqiong.com/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
  </entry>
  
  <entry>
    <title>logback配置详解</title>
    <link href="http://www.chenxiaoqiong.com/articles/logback/"/>
    <id>http://www.chenxiaoqiong.com/articles/logback/</id>
    <published>2016-12-29T09:47:05.000Z</published>
    <updated>2017-01-24T04:58:36.861Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>最近公司项目进行了重构，日志管理从Log4j迁移到了LogBack。 Logback是由log4j创始人Ceki Gülcü为取代log4j而设计的又一个开源日志组件。无论从设计上还是实现上，Logback相对log4j而言有了相对多的改进：<a href="http://www.oschina.net/translate/reasons-to-prefer-logbak-over-log4j。" target="_blank" rel="external">http://www.oschina.net/translate/reasons-to-prefer-logbak-over-log4j。</a></p>
</blockquote>
<h2 id="logback配置详解"><a href="#logback配置详解" class="headerlink" title="logback配置详解"></a>logback配置详解</h2><h3 id="日志级别"><a href="#日志级别" class="headerlink" title="日志级别"></a>日志级别</h3><ol>
<li>DEBUG：指出细粒度信息事件对调试应用程序是非常有帮助的；</li>
<li>INFO：消息在粗粒度级别上突出强调应用程序的运行过程；</li>
<li>WARN：会出现潜在错误的情形；</li>
<li>ERROR：指出虽然发生错误事件，但仍然不影响系统的继续运行；</li>
<li>FATAL：指出每个严重的错误事件将会导致应用程序的退出；</li>
<li>另外，还有两个可用的特别的日志记录级别:<br>ALL:用于打开所有日志记录；<br>OFF:用于关闭所有日志记录。<br><strong><em>优先级从高到低分别是 ERROR、WARN、INFO、DEBUG。通过定义的级别，您可以控制到应用程序中相应级别的日志信息的开关。程序会打印高于或等于所设置级别的日志，设置的日志等级越高，打印出来的日志就越少。如果设置级别为INFO，则优先级高于等于INFO级别（如：INFO、 WARN、ERROR）的日志信息将可以被输出,小于该级别的如DEBUG将不会被输出。</em></strong></li>
</ol>
<h3 id="基本配置及解释"><a href="#基本配置及解释" class="headerlink" title="基本配置及解释"></a>基本配置及解释</h3><h4 id="基本配置文件"><a href="#基本配置文件" class="headerlink" title="基本配置文件"></a>基本配置文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span>?&gt;</div><div class="line">&lt;configuration&gt;</div><div class="line">    &lt;property name=<span class="string">"log.charset.encoding"</span> value=<span class="string">"UTF-8"</span>/&gt;</div><div class="line">    &lt;property name=<span class="string">"LOG_HOME"</span> value=<span class="string">"log"</span> /&gt;</div><div class="line">    &lt;!-- 控制台输出 --&gt;</div><div class="line">    &lt;appender name=<span class="string">"STDOUT"</span> class=<span class="string">"ch.qos.logback.core.ConsoleAppender"</span>&gt;</div><div class="line">        &lt;Encoding&gt;UTF-8&lt;/Encoding&gt;</div><div class="line">        &lt;layout class=<span class="string">"ch.qos.logback.classic.PatternLayout"</span>&gt;</div><div class="line">            &lt;pattern&gt;%d&#123;HH:mm:ss.SSS&#125; [%thread] %-5level %logger&#123;50&#125; - %msg%n</div><div class="line">            &lt;/pattern&gt;</div><div class="line">        &lt;/layout&gt;</div><div class="line">    &lt;/appender&gt;</div><div class="line"></div><div class="line">    &lt;!-- 按照每天生成日志文件 --&gt;</div><div class="line">    &lt;appender name=<span class="string">"FILE"</span></div><div class="line">              class=<span class="string">"ch.qos.logback.core.rolling.RollingFileAppender"</span>&gt;</div><div class="line">        &lt;Encoding&gt;UTF-8&lt;/Encoding&gt;</div><div class="line">        &lt;rollingPolicy class=<span class="string">"ch.qos.logback.core.rolling.TimeBasedRollingPolicy"</span>&gt;</div><div class="line">            &lt;FileNamePattern&gt;<span class="variable">$&#123;LOG_HOME&#125;</span>/myApp.log.%d&#123;yyyy-MM-dd&#125;.log&lt;/FileNamePattern&gt;</div><div class="line">            &lt;MaxHistory&gt;30&lt;/MaxHistory&gt;</div><div class="line">        &lt;/rollingPolicy&gt;</div><div class="line">        &lt;layout class=<span class="string">"ch.qos.logback.classic.PatternLayout"</span>&gt;</div><div class="line">            &lt;pattern&gt;%d&#123;HH:mm:ss.SSS&#125; [%thread] %-5level %logger&#123;50&#125; - %msg%n</div><div class="line">            &lt;/pattern&gt;</div><div class="line">        &lt;/layout&gt;</div><div class="line">    &lt;/appender&gt;</div><div class="line"></div><div class="line">    &lt;!-- 按照每天生成错误日志文件 --&gt;</div><div class="line">    &lt;appender name=<span class="string">"FILE-ERROR"</span></div><div class="line">              class=<span class="string">"ch.qos.logback.core.rolling.RollingFileAppender"</span>&gt;</div><div class="line">        &lt;Encoding&gt;UTF-8&lt;/Encoding&gt;</div><div class="line">        &lt;rollingPolicy class=<span class="string">"ch.qos.logback.core.rolling.TimeBasedRollingPolicy"</span>&gt;</div><div class="line">            &lt;FileNamePattern&gt;<span class="variable">$&#123;LOG_HOME&#125;</span>/myApp.log_error.%d&#123;yyyy-MM-dd&#125;.log&lt;/FileNamePattern&gt;</div><div class="line">            &lt;MaxHistory&gt;30&lt;/MaxHistory&gt;</div><div class="line">        &lt;/rollingPolicy&gt;</div><div class="line">        &lt;layout class=<span class="string">"ch.qos.logback.classic.PatternLayout"</span>&gt;</div><div class="line">            &lt;pattern&gt;%d&#123;HH:mm:ss.SSS&#125; [%thread] %-5level %logger&#123;50&#125; - %msg%n</div><div class="line">            &lt;/pattern&gt;</div><div class="line">        &lt;/layout&gt;</div><div class="line">        &lt;!-- 下面为配置只输出error级别的日志 --&gt;</div><div class="line">        &lt;filter class=<span class="string">"ch.qos.logback.classic.filter.LevelFilter"</span>&gt;</div><div class="line">            &lt;level&gt;ERROR&lt;/level&gt;</div><div class="line">            &lt;onMatch&gt;ACCEPT&lt;/onMatch&gt;</div><div class="line">            &lt;onMismatch&gt;DENY&lt;/onMismatch&gt;</div><div class="line">        &lt;/filter&gt;</div><div class="line">    &lt;/appender&gt;</div><div class="line"></div><div class="line">    &lt;!-- 设置具体一个类日志的日志打印 --&gt;</div><div class="line">    &lt;loger name=<span class="string">"com.candy.controller.TestController"</span> level=<span class="string">"INFO"</span> activity=<span class="string">"false"</span>&gt;</div><div class="line">        &lt;appender-ref ref=<span class="string">"STDOUT"</span>/&gt;</div><div class="line">        &lt;appender-ref ref=<span class="string">"FILE"</span>/&gt;</div><div class="line">    &lt;/loger&gt;</div><div class="line"></div><div class="line">    &lt;root level=<span class="string">"DEBUG"</span>&gt;</div><div class="line">        &lt;appender-ref ref=<span class="string">"STDOUT"</span> /&gt;</div><div class="line">        &lt;appender-ref ref=<span class="string">"FILE"</span> /&gt;</div><div class="line">    &lt;/root&gt;</div><div class="line">&lt;/configuration&gt;</div></pre></td></tr></table></figure>
<h4 id="配置文件节点详解"><a href="#配置文件节点详解" class="headerlink" title="配置文件节点详解"></a>配置文件节点详解</h4><ul>
<li><p>设置变量： &lt; property &gt;<br>用来定义变量值的标签，<property> 有两个属性，name和value；其中name的值是变量的名称，value的值时变量定义的值。通过<property>定义的值会被插入到logger上下文中。定义变量后，可以使“${}”来使用变量。</property></property></p>
</li>
<li><p>设置loger：&lt; loger &gt;<br>用来设置某一个包或者具体的某一个类的日志打印级别、以及指定<appender>。<loger>仅有一个name属性，一个可选的level和一个可选的addtivity属性。<br>name:<br>用来指定受此loger约束的某一个包或者具体的某一个类。<br>level:<br>用来设置打印级别，大小写无关：TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF，还有一个特殊值INHERITED或者同义词NULL，代表强制执行上级的级别。<br>如果未设置此属性，那么当前loger将会继承上级的级别。<br>addtivity:<br>是否向上级loger传递打印信息。默认是true。<br>&lt; loger &gt;可以包含零个或多个&lt; appender-ref &gt;元素，标识这个appender将会添加到这个loger。</loger></appender></p>
</li>
<li><p>设置root:&lt; root &gt;<br>也是<loger>元素，但是它是根loger。只有一个level属性，应为已经被命名为”root”.<br>level:<br>用来设置打印级别，大小写无关：TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF，不能设置为INHERITED或者同义词NULL。<br>默认是DEBUG。<br><root>可以包含零个或多个<appender-ref>元素，标识这个appender将会添加到这个loger。</appender-ref></root></loger></p>
<h3 id="过滤器filter"><a href="#过滤器filter" class="headerlink" title="过滤器filter"></a>过滤器filter</h3></li>
<li><p>过滤器的返回值只能是ACCEPT、DENY和NEUTRAL的其中一个<br>DENY：记录事件立即被抛弃，不再经过剩余过滤器；<br>NEUTRAL：有序列表里的下一个过滤器会接着处理记录事件；<br>ACCEPT：那么记录事件被立即处理，不再经过剩余过滤器。<br>过滤器被添加到<appender>中，为<appender>添加一个或多个过滤器后，可以用任意条件对日志进行过滤。<appender> 有多个过滤器时，按照配置顺序执行。</appender></appender></appender></p>
</li>
</ul>
<ul>
<li>常用的过滤器：</li>
</ul>
<ol>
<li>LevelFilter： 级别过滤器，根据日志级别进行过滤。如果日志级别等于配置级别，过滤器会根据onMath 和 onMismatch接收或拒绝日志。有以下子节点：<br>&lt; level &gt;:设置过滤级别<br>&lt; onMatch &gt;:用于配置符合过滤条件的操作<br>&lt; onMismatch &gt;:用于配置不符合过滤条件的操作</li>
<li>ThresholdFilter： 临界值过滤器，过滤掉低于指定临界值的日志。当日志级别等于或高于临界值时，过滤器返回NEUTRAL；当日志级别低于临界值时，日志会被拒绝。</li>
<li>EvaluatorFilter： 求值过滤器，评估、鉴别日志是否符合指定条件。</li>
</ol>
<p>此篇文章只是自己做了一下总结，还有诸多不足，还请大家指正！</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;最近公司项目进行了重构，日志管理从Log4j迁移到了LogBack。 Logback是由log4j创始人Ceki Gülcü为取代log4j而设计的又一个开源日志组件。无论从设计上还是实现上，Logback相对log4j而言有了相对多的改进：&lt;a 
    
    </summary>
    
      <category term="技术" scheme="http://www.chenxiaoqiong.com/categories/develop/"/>
    
      <category term="logback" scheme="http://www.chenxiaoqiong.com/categories/develop/logback/"/>
    
    
      <category term="日志配置" scheme="http://www.chenxiaoqiong.com/tags/%E6%97%A5%E5%BF%97%E9%85%8D%E7%BD%AE/"/>
    
      <category term="logback" scheme="http://www.chenxiaoqiong.com/tags/logback/"/>
    
  </entry>
  
  <entry>
    <title>tomcat配置https协议</title>
    <link href="http://www.chenxiaoqiong.com/articles/https/"/>
    <id>http://www.chenxiaoqiong.com/articles/https/</id>
    <published>2016-11-25T08:34:53.000Z</published>
    <updated>2017-01-24T05:04:20.067Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>当遇到支付等安全性要求较高的情况时需要使用https协议，在此记录一下配置方式，方便以后查看，也希望能帮到其他朋友。</p>
</blockquote>
<h2 id="HTTPS协议详解"><a href="#HTTPS协议详解" class="headerlink" title="HTTPS协议详解"></a>HTTPS协议详解</h2><p>  <strong>HTTPS是HTTP的安全版，其与http的主要区别如下：</strong>
　　</p>
<ol>
<li><p>https协议需要到ca申请证书，一般免费证书很少，需要交费。</p>
</li>
<li><p>http是超文本传输协议，信息是明文传输，https 则是具有安全性的ssl加密传输协议。</p>
</li>
<li><p>http和https使用的是完全不同的连接方式，用的端口也不一样，前者是80，后者是443。</p>
</li>
<li><p>http的连接很简单，是无状态的；HTTPS协议是由SSL+HTTP协议构建的可进行加密传输、身份认证的网络协议，比http协议安全。</p>
</li>
</ol>
<h2 id="tomcat配置"><a href="#tomcat配置" class="headerlink" title="tomcat配置"></a>tomcat配置</h2><h3 id="windows环境"><a href="#windows环境" class="headerlink" title="windows环境"></a>windows环境</h3><p><strong>注：下文中“d:\tbb.keystore，d:\tbb.cer”为证书文件路径，没有会自动创建，路径可自行更改；“yourPassword”为密码</strong></p>
<ol>
<li><p>创建证书keystore<br>在命令行窗口中输入以下命令： <code>keytool -genkey -alias tbb -keyalg RSA -keystore d:\tbb.keystore</code><br>根据提示输入信息：<br><img src="/img/imgs/https1.jpg" alt=""><br>注：名字和姓氏要输入本机ip，国家、地区代码：cn</p>
</li>
<li><p>创建自签名的证书<br>在命令行窗口中输入以下命令：<code>keytool -selfcert -alias tbb -keystore d:\tbb.keystore</code></p>
</li>
<li><p>导出证书：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">keytool -export -alias tbb -keystore d:\tbb.keystore -storepass yourPassword</div><div class="line">-rfc -file d:\tbb.cer</div></pre></td></tr></table></figure>
</li>
<li><p>双击打开d:\tbb.cer，将证书安装在“受信任的根证书颁发机构”区域中（也可以配置好之后从浏览器导入）<br><img src="/img/imgs/https2.jpg" alt=""><br><img src="/img/imgs/https3.jpg" alt=""><br><img src="/img/imgs/https4.jpg" alt=""></p>
</li>
<li><p>tomcat配置，打开conf/server.xml,加入如下配置：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">tomcat6配置：</div><div class="line">&lt; Connector port=<span class="string">"443"</span> protocol=<span class="string">"HTTP/1.1"</span> SSLEnabled=<span class="string">"true"</span> maxThreads=<span class="string">"150"</span></div><div class="line">scheme=<span class="string">"https"</span> secure=<span class="string">"true"</span> keystoreFile=<span class="string">"d:\tbb.keystore"</span></div><div class="line">keystorePass=<span class="string">"yourPassword"</span> clientAuth=<span class="string">"false"</span> sslProtocol=<span class="string">"TLS"</span> /&gt;</div><div class="line">Tomcat7配置：</div><div class="line">&lt; Connector port=<span class="string">"8443"</span> protocol=<span class="string">"org.apache.coyote.http11.Http11Protocol"</span></div><div class="line">SSLEnabled=<span class="string">"true"</span> maxThreads=<span class="string">"150"</span> scheme=<span class="string">"https"</span> secure=<span class="string">"true"</span> keystoreFile=<span class="string">"d:</span></div><div class="line">\tbb.keystore" keystorePass=<span class="string">"yourPassword"</span> clientAuth=<span class="string">"false"</span> sslProtocol=<span class="string">"TLS"</span> /&gt;</div></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="linux环境"><a href="#linux环境" class="headerlink" title="linux环境"></a>linux环境</h3><ol>
<li><p>创建证书keystore，执行下面的命令，按提示输入信息</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">keytool -genkey -alias tomcat -keyalg RSA -keystore /root/tomcat/apache-tomcat-8.0.35/conf/.keystore</div></pre></td></tr></table></figure>
</li>
<li><p>修改tomcat的conf/server.xml文件</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;Connector port=<span class="string">"8443"</span> protocol=<span class="string">"HTTP/1.1"</span> SSLEnabled=<span class="string">"true"</span> maxThreads=<span class="string">"150"</span> scheme=<span class="string">"https"</span></div><div class="line">secure=<span class="string">"true"</span> clientAuth=<span class="string">"false"</span> keystoreFile=<span class="string">"/root/tomcat/apache-tomcat-8.0.35/</span></div><div class="line">conf/.keystore" keystorePass=<span class="string">"yourpassword"</span>  sslProtocol=<span class="string">"TLS"</span> /&gt;</div></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="测试效果"><a href="#测试效果" class="headerlink" title="测试效果"></a>测试效果</h3><p>此配置是自己生成ssl证书，不被浏览器信任（具体表现https前面有个X）：<br><img src="/img/imgs/https5.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;当遇到支付等安全性要求较高的情况时需要使用https协议，在此记录一下配置方式，方便以后查看，也希望能帮到其他朋友。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;HTTPS协议详解&quot;&gt;&lt;a href=&quot;#HTTPS协议详解&quot; class=&quot;
    
    </summary>
    
      <category term="技术" scheme="http://www.chenxiaoqiong.com/categories/develop/"/>
    
      <category term="https" scheme="http://www.chenxiaoqiong.com/categories/develop/https/"/>
    
    
      <category term="https" scheme="http://www.chenxiaoqiong.com/tags/https/"/>
    
      <category term="tomcat" scheme="http://www.chenxiaoqiong.com/tags/tomcat/"/>
    
  </entry>
  
  <entry>
    <title>生活如雨，有伞就好！</title>
    <link href="http://www.chenxiaoqiong.com/articles/life/"/>
    <id>http://www.chenxiaoqiong.com/articles/life/</id>
    <published>2016-11-04T07:02:03.000Z</published>
    <updated>2016-11-04T08:26:34.547Z</updated>
    
    <content type="html"><![CDATA[<p>其实生活就是一场雨，<br>有伞就能平安度过，<br>没有伞，就会被雨淋成落汤鸡。<br>朋友，你有伞吗？</p>
<p><img src="/img/life/life1.png" alt=""><br>或许没有伞的人居多，<br>因为没伞，被雨淋得稀里哗啦。<br>每个人都想有一把伞，<br>在生活中遮风避雨。<br>可伞在哪里？</p>
<p><img src="/img/life/life2.png" alt=""><br>若别人能够给予，<br>当然心怀感恩、一路同行。<br>若无人给予，<br>不妨自己造一把伞，<br>撑自己的伞，风雨无阻。</p>
<p><img src="/img/life/life4.png" alt=""><br>生活如雨，有伞就好！<br>不管是自己撑起的，还是别人给的。</p>
<p><img src="/img/life/life5.png" alt=""><br>生活如雨，有伞就好！<br>要学会自己制造伞，<br>让自己在风雨中行走，在大浪中激闯！</p>
<p><img src="/img/life/life6.png" alt=""><br>生活如雨，有伞就好！<br>记得，没有伞也不要怕，<br>别人能趟过去，自己也可以过去。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;其实生活就是一场雨，&lt;br&gt;有伞就能平安度过，&lt;br&gt;没有伞，就会被雨淋成落汤鸡。&lt;br&gt;朋友，你有伞吗？&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/life/life1.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;或许没有伞的人居多，&lt;br&gt;因为没伞，被雨淋得稀里哗啦。&lt;br&gt;每个
    
    </summary>
    
      <category term="生活" scheme="http://www.chenxiaoqiong.com/categories/life/"/>
    
      <category term="美文" scheme="http://www.chenxiaoqiong.com/categories/life/essay/"/>
    
    
      <category term="美文" scheme="http://www.chenxiaoqiong.com/tags/%E7%BE%8E%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>idea(IntelliJ IDEA)快捷键</title>
    <link href="http://www.chenxiaoqiong.com/articles/idea/"/>
    <id>http://www.chenxiaoqiong.com/articles/idea/</id>
    <published>2016-11-03T02:09:23.000Z</published>
    <updated>2016-11-03T06:37:23.175Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>IDEA 全称IntelliJ IDEA，是java语言开发的集成环境，IntelliJ在业界被公认为最好的java开发工具之一，尤其在智能代码助手、代码自动提示、重构、J2EE支持、Ant、JUnit、CVS整合、代码审查、 创新的GUI设计等方面的功能可以说是超常的。IDEA是JetBrains公司的产品，这家公司总部位于捷克共和国的首都布拉格，开发人员以严谨著称的东欧程序员为主。</p>
<h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><h3 id="最常用快捷键"><a href="#最常用快捷键" class="headerlink" title="最常用快捷键"></a>最常用快捷键</h3><p>Ctrl+N   查找类<br>Ctrl+Shift+N 查找文件<br>Alt+回车 导入包,自动修正<br>Alt+Insert 生成代码(如get,set方法,构造函数等)<br>Ctrl+X 删除行<br>Ctrl+D 复制行<br>Ctrl+/ 或 Ctrl+Shift+/  注释（// 或者/<em>…</em>/ ）<br>Ctrl+E 最近打开的文件<br>Ctrl+G 定位到某行<br>Ctrl+R 替换文本<br>Ctrl+F 查找文本<br>Ctrl+Shift+R 替换全局文本<br>Ctrl+Shift+F 查找全局文本<br>Ctrl+Alt+L  格式化代码<br>Ctrl+Alt+O 优化导入的类和包</p>
<h3 id="查询快捷键"><a href="#查询快捷键" class="headerlink" title="查询快捷键"></a>查询快捷键</h3><p>CTRL+N   查找类<br>CTRL+SHIFT+N  查找文件<br>CTRL+SHIFT+ALT+N 查找类中的方法或变量<br>CIRL+B   找变量的来源<br>CTRL+ALT+B  找所有的子类<br>CTRL+SHIFT+B  找变量的类<br>CTRL+G   定位行<br>CTRL+F   在当前窗口查找文本<br>CTRL+SHIFT+F  在指定窗口查找文本<br>CTRL+R   在 当前窗口替换文本<br>CTRL+SHIFT+R  在指定窗口替换文本<br>ALT+SHIFT+C  查找修改的文件<br>CTRL+E   最近打开的文件<br>F3   向下查找关键字出现位置<br>SHIFT+F3  向上一个关键字出现位置<br>F4   查找变量来源<br>CTRL+ALT+F7  选中的字符查找工程出现的地方<br>CTRL+SHIFT+O  弹出显示查找内容</p>
<h3 id="自动代码"><a href="#自动代码" class="headerlink" title="自动代码"></a>自动代码</h3><p>ALT+回车  导入包,自动修正<br>CTRL+ALT+L  格式化代码<br>CTRL+ALT+I  自动缩进<br>CTRL+ALT+O  优化导入的类和包<br>ALT+INSERT  生成代码(如GET,SET方法,构造函数等)<br>CTRL+E 最近更改的代码<br>CTRL+SHIFT+SPACE 自动补全代码<br>CTRL+空格  代码提示<br>CTRL+ALT+SPACE  类名或接口名提示<br>CTRL+P   方法参数提示<br>CTRL+J   自动代码<br>CTRL+ALT+T  把选中的代码放在 TRY{} IF{} ELSE{} 里</p>
<h3 id="复制快捷方式"><a href="#复制快捷方式" class="headerlink" title="复制快捷方式"></a>复制快捷方式</h3><p>CTRL+D   复制行<br>CTRL+X   剪切,删除行  </p>
<h3 id="其他快捷方式"><a href="#其他快捷方式" class="headerlink" title="其他快捷方式"></a>其他快捷方式</h3><p>CIRL+U   大小写切换<br>CTRL+Z   倒退<br>CTRL+SHIFT+Z  向前<br>CTRL+ALT+F12  资源管理器打开文件夹<br>ALT+F1   查找文件所在目录位置<br>SHIFT+ALT+INSERT 竖编辑模式<br>CTRL+/   注释//<br>CTRL+SHIFT+/  注释/<em>…</em>/<br>CTRL+W   选中代码，连续按会有其他效果<br>CTRL+B   快速打开光标处的类或方法<br>ALT+ ←/→  切换代码视图<br>CTRL+ALT ←/→  返回上次编辑的位置<br>ALT+ ↑/↓  在方法间快速移动定位<br>SHIFT+F6  重构-重命名<br>CTRL+H   显示类结构图<br>CTRL+Q   显示注释文档<br>ALT+1   快速打开或隐藏工程面板<br>CTRL+SHIFT+UP/DOWN 代码向上/下移动。<br>CTRL+UP/DOWN  光标跳转到第一行或最后一行下<br>ESC   光标返回编辑框<br>SHIFT+ESC  光标返回编辑框,关闭无用的窗口<br>F1   帮助千万别按,很卡!<br>CTRL+F4   非常重要下班都用</p>
<h2 id="快捷键设置"><a href="#快捷键设置" class="headerlink" title="快捷键设置"></a>快捷键设置</h2><p>file&gt;setting&gt;keymap<br><img src="/img/imgs/idea1.png" alt=""><br><img src="/img/imgs/idea2.png" alt=""><br>可以选择自己喜欢的模式，包括eclipse。也可以设置每一个快捷键，不过感觉太麻烦了</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;IDEA 全称IntelliJ IDEA，是java语言开发的集成环境，IntelliJ在业界被公认为最好的java开发工具之一，尤其在智能
    
    </summary>
    
      <category term="技术" scheme="http://www.chenxiaoqiong.com/categories/develop/"/>
    
      <category term="IntelliJ IDEA" scheme="http://www.chenxiaoqiong.com/categories/develop/IntelliJ-IDEA/"/>
    
    
      <category term="IntelliJ IDEA" scheme="http://www.chenxiaoqiong.com/tags/IntelliJ-IDEA/"/>
    
  </entry>
  
  <entry>
    <title>Nginx安装与配置</title>
    <link href="http://www.chenxiaoqiong.com/articles/nginx/"/>
    <id>http://www.chenxiaoqiong.com/articles/nginx/</id>
    <published>2016-10-17T09:04:27.000Z</published>
    <updated>2017-05-02T07:24:19.736Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><h3 id="安装pcre"><a href="#安装pcre" class="headerlink" title="安装pcre"></a>安装pcre</h3><ol>
<li>获取pcre编译安装包，在<a href="http://www.pcre.org/" target="_blank" rel="external">http://www.pcre.org/</a> 上可以获取当前最新的版本</li>
<li>解压缩pcre-xx.tar.gz包。</li>
<li>进入解压缩目录，执行./configure。</li>
<li>make &amp; make install</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">可能发生错误</div><div class="line">make: ***No targets specified and no makefile found. Stop.</div><div class="line">解决方法</div><div class="line">./configure -prefix=/usr/<span class="built_in">local</span> -with-shared-without-debug</div><div class="line">make</div><div class="line">make install</div></pre></td></tr></table></figure>
<h3 id="安装openssl"><a href="#安装openssl" class="headerlink" title="安装openssl"></a>安装openssl</h3><ol>
<li>获取openssl编译安装包，在<a href="http://www.openssl.org/source/上可以获取当前最新的版本。" target="_blank" rel="external">http://www.openssl.org/source/上可以获取当前最新的版本。</a></li>
<li>解压缩openssl-xx.tar.gz包。</li>
<li>进入解压缩目录，执行./config。</li>
<li>make &amp; make install</li>
</ol>
<h3 id="安装zlib"><a href="#安装zlib" class="headerlink" title="安装zlib"></a>安装zlib</h3><ol>
<li>获取zlib编译安装包，在<a href="http://www.zlib.net/上可以获取当前最新的版本。" target="_blank" rel="external">http://www.zlib.net/上可以获取当前最新的版本。</a></li>
<li>解压缩zlib-xx.tar.gz包。</li>
<li>进入解压缩目录，执行./configure。</li>
<li>make &amp; make install</li>
</ol>
<h3 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h3><ol>
<li>获取nginx，在<a href="http://nginx.org/en/download.html上可以获取当前最新的版本。" target="_blank" rel="external">http://nginx.org/en/download.html上可以获取当前最新的版本。</a></li>
<li>解压缩nginx-xx.tar.gz包。</li>
<li>进入解压缩目录，执行./configure</li>
<li>make &amp; make install</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">可能出现错误：</div><div class="line">make: *** No rule to make target <span class="string">'build'</span>, needed by <span class="string">'default'</span>.  Stop.</div><div class="line">解决办法：</div><div class="line">./configure  --sbin-path=/usr/<span class="built_in">local</span>/nginx/nginx-1.11.3/nginx\</div><div class="line">--pid-path=/usr/<span class="built_in">local</span>/nginx/nginx-1.11.3/nginx.pid\</div><div class="line">--with-http_ssl_module\</div><div class="line">//指定依赖路径`</div><div class="line">--with-pcre=/usr/<span class="built_in">local</span>/nginx/pcre-8.36 \</div><div class="line">--with-zlib=/usr/<span class="built_in">local</span>/nginx/zlib-1.2.8 \</div><div class="line">--with-openssl=/usr/<span class="built_in">local</span>/nginx/openssl-1.0.1h</div></pre></td></tr></table></figure>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><h3 id="nginx启动与重启"><a href="#nginx启动与重启" class="headerlink" title="nginx启动与重启"></a>nginx启动与重启</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> usr/<span class="built_in">local</span>/nginx/sbin</div><div class="line">./nginx</div><div class="line">如果无法启动执行命令：</div><div class="line">ln <span class="_">-s</span> /usr/<span class="built_in">local</span>/lib/libpcre.so.1 /lib64</div><div class="line">重启：</div><div class="line">./nginx –s reload</div></pre></td></tr></table></figure>
<h3 id="测试效果"><a href="#测试效果" class="headerlink" title="测试效果"></a>测试效果</h3><p>启动之后打开浏览器输入localhost，出现如下页面，恭喜你安装成功！<br><img src="/img/imgs/nginx.jpg" alt=""></p>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="负载均衡的4种配置方式"><a href="#负载均衡的4种配置方式" class="headerlink" title="负载均衡的4种配置方式"></a>负载均衡的4种配置方式</h3><ul>
<li><p>轮询（默认）<br> 每个请求按时间顺序逐一分配到不同的后端服务器，如果后端服务器down掉，能自动剔除。 </p>
</li>
<li><p>weight<br> 指定轮询几率，weight和访问比率成正比，用于后端服务器性能不均的情况。 </p>
</li>
<li><p>ip_hash<br> 每个请求按访问ip的hash结果分配，这样每个访客固定访问一个后端服务器，可以解决session的问题。  </p>
</li>
<li><p>第三方<br> fair（按后端服务器的响应时间来分配请求，响应时间短的优先分配。）<br> url_hash</p>
</li>
</ul>
<p>更详细可参考：<br><a href="http://www.linuxidc.com/Linux/2015-03/115207.htm" target="_blank" rel="external">http://www.linuxidc.com/Linux/2015-03/115207.htm</a><br><a href="http://www.cnblogs.com/xiaogangqq123/archive/2011/03/04/1971002.html" target="_blank" rel="external">http://www.cnblogs.com/xiaogangqq123/archive/2011/03/04/1971002.html</a><br><a href="http://www.php100.com/html/program/nginx/2013/0905/5525.html" target="_blank" rel="external">http://www.php100.com/html/program/nginx/2013/0905/5525.html</a></p>
<h3 id="静态资源配置"><a href="#静态资源配置" class="headerlink" title="静态资源配置"></a>静态资源配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">location ~* \.(gif|jpg|jpeg|png|bmp|swf|css|js|html)$ &#123;</div><div class="line">root         /usr/<span class="built_in">local</span>/nginx/nginx-1.11.3/html;   <span class="comment">#在此目录下放项目同名文件夹静态资源</span></div><div class="line">expires      30d;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<hr>
<h2 id="相关链接："><a href="#相关链接：" class="headerlink" title="相关链接："></a>相关链接：</h2><p><a href="http://www.cnblogs.com/skynet/p/4146083.html（吴秦）" target="_blank" rel="external">http://www.cnblogs.com/skynet/p/4146083.html（吴秦）</a><br><a href="http://www.cnblogs.com/zhuhongbao/archive/2013/06/04/3118061.html" target="_blank" rel="external">http://www.cnblogs.com/zhuhongbao/archive/2013/06/04/3118061.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安装步骤&quot;&gt;&lt;a href=&quot;#安装步骤&quot; class=&quot;headerlink&quot; title=&quot;安装步骤&quot;&gt;&lt;/a&gt;安装步骤&lt;/h2&gt;&lt;h3 id=&quot;安装pcre&quot;&gt;&lt;a href=&quot;#安装pcre&quot; class=&quot;headerlink&quot; title=&quot;安装pcr
    
    </summary>
    
      <category term="技术" scheme="http://www.chenxiaoqiong.com/categories/develop/"/>
    
      <category term="nginx" scheme="http://www.chenxiaoqiong.com/categories/develop/nginx/"/>
    
    
      <category term="nginx" scheme="http://www.chenxiaoqiong.com/tags/nginx/"/>
    
  </entry>
  
</feed>
